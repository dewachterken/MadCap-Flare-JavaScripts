<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Post-build replacer</h1>
        <p>The post-build replacer is a simple Rust-application that you can use as a post-build event to find and replace code, with support of regular expression.</p>
        <p>To use it, add a post-build event command (in the Build Events tab page of your target). Note that you can use Flare's build variables: <code>$(TargetName)</code>, <code>$(ProjectName)</code>, <code>$(ProjectDirectory)</code> and <code>$(OutputDirectory)</code>.</p>
        <p>Structure of the command:</p>
        <ol>
            <li><span style="color: #b22222;">Path of the post-build replacer</span>
            </li>
            <li><span style="color: #daa520;">Path of the files</span>
            </li>
            <li><span style="color: #6b8e23;">Regular expression of the find string</span>
            </li>
            <li><span style="color: #00bfff;">Regular expressions of the replace string</span>
            </li>
        </ol>
        <p>Here's an example of the post-build event used in this demo project. It replaces <code>li</code> elements with a value attribute by <code>li</code> element without it.</p>
        <p><code>"<span style="color: #b22222;">$(ProjectDirectory)\Content\post-build-replacer\post-build-replacer.exe</span>" "<span style="color: #daa520;">$(OutputDirectory)\**\*.htm</span>" "<span style="color: #6b8e23;">&lt;li value..[0-9]+.&gt;</span>" "<span style="color: #00bfff;">&lt;li&gt;</span>"</code>
        </p>
    </body>
</html>