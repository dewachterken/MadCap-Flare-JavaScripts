<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Explanation of the dropdown selector</h1>
        <p>The dropdown selector allows you to create a dropdown that hides content based its selection. Some examples:</p>
        <ul>
            <li>Hide steps in a procedure depending on your operating system</li>
            <li>Hide rows in a table depending on your user role or application</li>
        </ul>
        <p>Each item in the dropdown selector points to a specific condition tag. If the user selects an option in the dropdown selector, the condition tag is applied and other condition tags from the dropdown selector are hidden.</p>
        <p>Condition tags that are not in the dropdown selector  are not affected at all by the dropdown selector.</p>
        <p>The dropdown selector only works in HTML output. The dropdown itself is by default marked as ScreenOnly, so it should be excluded in the PDF targets. However, you may have to add different content for the PDF targets, or refer the reader to the HTML guide.</p>
        <h2>Available resources in MadCap Flare</h2>
        <ul>
            <li>JavaScript: content/dropdown-selector/Resources/JavaScript/dropdownSelector.js</li>
            <li>Snippet containing dropdown: dropdown-selector/Resources/Snippets/dropdown-selector.flsnp</li>
            <li>CSS to style the dropdown: dropdown-selector/Resources/Stylesheets/dropdown-selector_styles.css</li>
            <li>Image needed by the CSS: dropdown-selector/Resources/Images/dropdown-selector.png</li>
        </ul>
        <h2>Explanation of the JavaScript</h2>
        <h3>Script steps</h3>
        <ol>
            <li>List all condition tags in the HTML element with an <code>id</code> attribute with value <code>version-select</code>.</li>
            <li>Hide all HTML elements that have one or more of those condition tags in the <code>data-mc-conditions</code> attribute.</li>
            <li>Apply the select logic to select an option in the dropdown selector.</li>
            <li>Unhide all HTML elements for which a condition tag matches the content of the option element that is selected in the dropdown selector.</li>
            <li>Save the selected option in the user's local storage.</li>
        </ol>
        <h3>Local storage</h3>
        <h4>General info</h4>
        <p>The script uses local storage to remember whether a user has selected an option in the past. Local storage is saved in the user's browser, so there are no cookies or confidentiality issues. More info: <a href="https://www.w3schools.com/html/html5_webstorage.asp" target="_blank">https://www.w3schools.com/html/html5_webstorage.asp</a>.</p>
        <h4>Specific info</h4>
        <p>The script saves and retrieves values from local storage based on keys. By default, it uses 'selectedVersion' as the key.</p>
        <p>However, if the script finds the key, but the value doesn't match any of the values of the options, the dropdown selector will remain empty. As a consequence, all content is shown, which may lead to very messy and confusing pages.</p>
        <p>For that reason, the dropdown selector contains an optional data-version-select-key attribute. The value of this attribute is appended to the default key. For example, if data-version-select-key is 'Catalog', the key for the dropdown selector is 'selectedVersionCatalog'. This allows us to use multiple dropdown selectors in the same MadCap Flare project.</p>
        <h3>Options</h3>
        <p>The dropdown selector contains <code>option</code> elements, which become the selectable options in the HTML output.</p>
        <p>Structure:</p>
        <p><code>&lt;option value="[parent folder/condition tag set.condition]"&gt;[text to display in the dropdown]&lt;/option&gt;</code>
        </p>
        <p>Example:</p>
        <p><code>&lt;option value="Dropdown Conditions/Applications.Catalog"&gt;Catalog / Data Dictionary&lt;/option&gt;</code>
        </p>
        <h4>Details</h4>
        <ul>
            <li>The content of the <code>option</code> element will become the selectable options in the HTML output, visible to users.</li>
            <li>The <code>option</code> element contains a mandatory <code>value</code> attribute. The content of the value attribute should match a condition tag.<ul><li>If you want to undo all conditions, leave the condition empty:<br /><code>&lt;option value=""&gt;Choose something...&lt;/option&gt;</code><br /></li><li>If the condition tag set is located directly under <code>Project/Conditional Text</code>, you don't need to include the path.</li></ul></li>
            <li>MadCap Flare does not map the option values via Analyzer. As a consequence, they are not automatically updated if you edit/move the condition tag set.</li>
            <li>One <code>option</code> element of the dropdown selector may contain an <code>id</code> attribute with the value <code>defaultVersionToSelect</code>. This will make the option the default value if there is no matching local storage key (see Select logic). Only 1 option element may have the <code>id</code> attribute!<br /><code>&lt;option id="defaultVersionToSelect" value="Dropdown Conditions/Applications.Catalog"&gt;Catalog / Data Dictionary&lt;/option&gt;</code></li>
        </ul>
        <h3>Select logic</h3>
        <p>On page loading, the script tries to select an option of the dropdown selector:</p>
        <ol>
            <li>Local storage<ol><li>The script checks the local storage to see whether the user has selected an option in the past. To do this, it uses the local storage key as explained above.</li><li>If it finds a matching local storage key, it compares the value to the option values of the dropdown selector.<ol><li>If the values of one of the options matches the value of the local storage key, the matching option is selected.</li><li>If none of the values of the options match the value of the local storage key, no option is selected in the drop-down selector.<br />If this happens, all content is unhidden, which may result in a very messy page! This is a known issue. We're working on a solution to let the script move to the default option in this situation.</li></ol></li></ol></li>
            <li>Default option<ol><li>If the script does not find a matching local storage key, it will look for an <code>option</code> element with an <code>id</code> attribute with the value <code>defaultVersionToSelect</code>.</li><li>If it finds a default option, it will select that option.<br />Note: this default option will only be used when the page if local storage does not contain a matching key (i.e. the very first time ever that the user opens the page).</li></ol></li>
            <li>Index value<ol><li>If it does not find a default option, it will check the <code>selectedIndex</code> value in the script itself and select the option whose number matches it. The default it is <code>0</code>, so the script will select the first option. If you change the <code>selectedIndex</code> to <code>1</code>, it will select the second option, and so on.</li></ol></li>
        </ol>
        <h2>To insert a dropdown selector in a topic</h2>
        <ol>
            <li>Write your topic.</li>
            <li>Create a condition tag for each dropdown value.<br />You can use any condition tag, but it's highly recommended not to use the condition tags for other purposes (in the target or as snippet conditions).</li>
            <li>Apply the conditions to the relevant sections.</li>
            <li>Insert a reference to the JavaScript in the head of the topic:<br /><code>&lt;script src="../../Resources/JavaScripts/ShowHideVersion.js" type="text/javascript" /&gt;</code><br />Depending on the location of the HTM file, you may have to adapt the location of the script.</li>
            <li>Add the dropdown selector:<ol><li>Insert the dropdown-selector snippet.</li><li>Convert the dropdown-selector snippet to text.</li><li>In the XML of the dropdown, edit the <code>value</code> attributes of the <code>option</code> elements so that each element refers to a condition and has clear interface text.</li></ol></li>
            <li>Preview your topic to make sure everything is okay.<br />Note: MadCap Flares HTML preview doesn't load the script automatically when you open the preview. Select another value to activate the script.</li>
        </ol>
        <p>Warning! When you build a ordered list, MadCap Flare adds an explicit number in the <code>value</code> attribute of the <code>li</code> element. As a consequence, if a step is hidden by the dropdown, the numbering goes wrong. You can solve that issue by means of the <a href="../../post-build-replacer/explanation_post-build-replacer.htm">post-build replacer</a>.</p>
    </body>
</html>